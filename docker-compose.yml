services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
    restart: always

  web:
    build: ./app
    working_dir: /app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./app:/app
      - app_logs:/app/logs
    # Порт не публикуется наружу, доступ только через nginx
    # ports:
    #   - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/rhcsa_db
    restart: always

  db_health_check:
    build: ./app
    working_dir: /app
    command: python check_db.py --daemon
    volumes:
      - ./app:/app
      - app_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/rhcsa_db
      - DB_HEALTH_CHECK_INTERVAL=300
    restart: always

  db_backup:
    build: ./app
    working_dir: /app
    command: python backup_db.py --daemon
    volumes:
      - ./app:/app
      - app_logs:/app/logs
      - db_backups:/app/backups
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/rhcsa_db
      - BACKUP_INTERVAL=86400
      - MAX_BACKUPS=7
      - BACKUP_DIR=/app/backups
    restart: always

  lint:
    build: ./app
    working_dir: /app
    command: /bin/bash -c "python -m ruff check ."
    volumes:
      - ./app:/app
    profiles:
      - lint

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rhcsa_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres_data:
  app_logs:
  db_backups: